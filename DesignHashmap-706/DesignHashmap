   class MyHashMap {
    Node [] storage;
    class Node{
        int key;
        int value;
        Node next;
        public Node(int key, int value){
      this.key=key;
this.value=value;
        }
    }
    
    public MyHashMap() {
storage=new Node[10000];
        
    }
    public int hashing(int key){
        int idx=key%10000;
        return idx;
    }
    public Node find(Node head,int key){
        Node prev=null;
        Node current=head;
        while(current != null && current.key != key)
        {
            prev=current;
            current=prev.next;
        }
        return prev;
    }
    public void put(int key, int value) {
        int idx=hashing(key);
        if(storage[idx] == null){
            storage[idx] = new Node(-1,-1);
        }
        Node prev=find(storage[idx],key);
       if(prev.next != null){
             prev.next.value=value;
        }else{
             prev.next=new Node(key,value);
        }

    }
    
    public int get(int key) {
        int idx=hashing(key);
        if(storage[idx] == null){
            return -1;
        }else{
            Node prev= find(storage[idx], key);
            if(prev.next == null){
                return -1;
            }
            return prev.next.value;
        }
        
    }
    
    public void remove(int key) {
        int idx=hashing(key);
        if(storage[idx]== null){
            return ;
        }else{
            Node prev=find(storage[idx], key);
           if(prev.next != null){
            Node temp = prev.next;
            prev.next = prev.next.next;
             
           }else{
            return ;
           }
        }
    }
}

/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap obj = new MyHashMap();
 * obj.put(key,value);
 * int param_2 = obj.get(key);
 * obj.remove(key);
 */